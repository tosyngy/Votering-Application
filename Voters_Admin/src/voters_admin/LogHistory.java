package voters_admin;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



/**
 *
 * @author damhiesax
 */
public class LogHistory extends javax.swing.JFrame {
    FormatDate fDate = new FormatDate();
   Date d;
   DefaultTableModel dataSet;
   int j;
    DbConnect dbcon = new DbConnect();
    String query; 
     /**
     * Creates new form LogHistory
     */
    public LogHistory() {
        initComponents();
        jButton5ActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo3 = new datechooser.beans.DateChooserCombo();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(null);

        dateChooserCombo2.setLocale(new java.util.Locale("en", "GB", ""));
        dateChooserCombo2.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateChooserCombo2OnCommit(evt);
            }
        });
        jPanel1.add(dateChooserCombo2);
        dateChooserCombo2.setBounds(150, 430, 110, 30);

        dateChooserCombo3.setLocale(new java.util.Locale("en", "GB", ""));
        dateChooserCombo3.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateChooserCombo3OnCommit(evt);
            }
        });
        jPanel1.add(dateChooserCombo3);
        dateChooserCombo3.setBounds(310, 430, 140, 30);

        jButton4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(560, 440, 100, 27);

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel3.setText("From");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(100, 440, 50, 18);

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel4.setText("To");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(270, 440, 16, 18);

        jButton5.setText("fetch");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(460, 430, 70, 30);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable( int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 50, 600, 340);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel9.setText("Log History");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(240, 10, 210, 40);

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("All");
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(30, 433, 50, 30);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Date Between"));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 410, 520, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateChooserCombo2OnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChooserCombo2OnCommit
    
       
           
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserCombo2OnCommit

    private void dateChooserCombo3OnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChooserCombo3OnCommit
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserCombo3OnCommit

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       this.setVisible(false);
      
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    String newquery;
        query="SELECT * FROM log where " ;
    if(jCheckBox1.isSelected()){
    newquery="SELECT * FROM log";
    }else{
      newquery=buildQuery();
    }
   
        if(!newquery.isEmpty()){
          fetch(newquery + " ORDER BY id DESC ");
        }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private datechooser.beans.DateChooserCombo dateChooserCombo3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
void fetch(String query){
    j=0;
     dataSet = new DefaultTableModel();
        dataSet.addColumn("S/N");
        dataSet.addColumn("Event Type");
        dataSet.addColumn("Agent ID");
        dataSet.addColumn("System ID");
         dataSet.addColumn("Period");
  try {
      //System.out.println("qqqqq  "+query);
         dbcon.rs = dbcon.st.executeQuery(query);
           while (dbcon.rs.next()) { 
               Object[] data = new Object[]{++j,dbcon.rs.getString("transactiontype"),dbcon.rs.getString("agentid"),dbcon.rs.getString("systemid"),dbcon.rs.getString("date")};
                dataSet.addRow(data);
            }
           jTable1.setModel(dataSet);
           if(dataSet.getRowCount()==0){
           JOptionPane.showMessageDialog(rootPane, "No record within Interval");
           }
        } catch (Exception e) {
     JOptionPane.showMessageDialog(rootPane, "An Error occur while fecthing information!!!");
    }
          
}
    
String buildQuery(){
  SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");
   String startDate = fDate.getDateFormat(dateChooserCombo2.getText());
          String  stopDate = fDate.getDateFormat(dateChooserCombo3.getText());
          boolean chkIt = fDate.checkDate(startDate, stopDate);
            if (!chkIt) {
                JOptionPane.showMessageDialog(rootPane, "Date not properly selected\nMake sure you selected a valid date");
                return "";
            }
                do {
                if (stopDate.equalsIgnoreCase(startDate)) {
                break;
                }
                d = new Date(startDate);
                query+=" `date` like '"+"%"+dateFormat.format(d)+"%' OR ";
                 startDate = fDate.getDate(startDate);
            } while ((!stopDate.equalsIgnoreCase(startDate)));
            d = new Date(startDate);
            query+=" `date` like '"+"%"+dateFormat.format(d)+"%'";
           return query;
}    
}
